/*
 * Programing Language C-- "Compiler"
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2016 - 2023 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * lib/ctype.cmm : 文字分類など
 *
 * 2023.08.16 : isPrintで印刷可能文字にUTF-8の文字も含むように変更
 * 2016.02.26 : 新規作成
 *
 * $Id$
 */

// 空白文字か？
public boolean isSpace(char c) {
  return '\t'==c || '\n'==c || '\x0b'==c || // '\x0b'は VT
         '\x0c'==c  || '\r'==c || ' '==c;   // '\x0c'は FF
}

// 数字か？
public boolean isDigit(char c) {
  return ord('0')<=ord(c) && ord(c)<=ord('9');
}

// 16進数字か？
public boolean isXdigit(char c) {
  return isDigit(c) ||
         ord('A')<=ord(c) && ord(c)<=ord('F') ||
         ord('a')<=ord(c) && ord(c)<=ord('f');
}

// 表示可能な文字か？
public boolean isPrint(char c) {
  return 0x20<=ord(c);
}

// アルファベット小文字か？
public boolean isLower(char c) {
  return ord('a')<=ord(c) && ord(c)<=ord('z');
}

// アルファベット大文字か？
public boolean isUpper(char c) {
  return ord('A')<=ord(c) && ord(c)<=ord('Z');
}

// アルファベットか？
public boolean isAlpha(char c) {
  return isUpper(c) || isLower(c);
}

// 英数字か？
public boolean isAlnum(char c) {
  return isDigit(c) || isAlpha(c);
}

// アルファベット大文字なら小文字へ変換する
public char toLower(char c) {
  if (isUpper(c)) c = chr(ord(c) + 0x20);
  return c;
}

// アルファベット小文字なら大文字へ変換する
public char toUpper(char c) {
  if (isLower(c)) c = chr(ord(c) - 0x20);
  return c;
}
